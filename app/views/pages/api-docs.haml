%header#header.header
  .container
    .branding
      %h1.logo
        %a{href: url_for(:pages, :index)}
          %span.icon_documents_alt.icon{"aria-hidden" => "true"}
          %span.text-highlight VimRC
          %span.text-bold Generator
    %ol.breadcrumb
      %li
        %a{href: url_for(:pages, :index)} Home
      %li.active API Docs
.doc-wrapper
  .container
    #doc-header.doc-header.text-center
      %h1.doc-title
        %i.icon.fa.fa-book
        API Documentation
      .meta
        %i.fa.fa-clock-o
        Last updated:
        = `git log -1 --format=%cr`.strip
    .doc-body
      .doc-content
        .content-inner
          %section#generate-api.doc-section
            %h2.section-title Downloadable VIM configuration
            .section-block
              :markdown
                ### - GET /generate

                Generate VIM configuration with all bells and whistles. Response is `plain-text`
                and can be downloaded via `curl`, `wget`, etc. to replace `~/.vimrc` file.

                ### - GET /generate?only=sane_defaults,startup_screen

                Generate a VIM configuration comprising of only the topics listed above.
                Required topics like `variables`, `plugin_manager`, etc. are always returned, so
                as to ensure that the generated VIM config is usable.

                ### - GET /generate?exclude=macosx

                This endpoint can be used when you want to exclude topics from the generated VIM
                configuration, e.g. you may not want to include `macosx` topic in a vim config
                solely being used on Linux systems. Or, in cases, when you may not want to
                include a particular feature, like `startup_screen`.

          %section#topics-api.doc-section
            %h2.section-title Topics Endpoint
            .section-block
              :markdown
                ### - GET /topics.json

                VIM configuration generated by `/generate` endpoint is broken into several
                `topics`. You can grab a list of all such topics via this endpoint. Each topic
                is accompanied with metadata, and sections.

                A topic is identified via its name, or via an index. `/generate` endpoint uses
                `index` to place them accordingly in the generated configuration.

                A topic is, further, divided into `sections`. Section, here, is a granular unit
                of vim config that provides a particular feature to the editor. Sections have
                a list of features it provides, and the accompanying code.

                ### - GET /topics.json?list=1

                Return a JSON array of all topic names available.

                ### - GET /topics.json?only=sane_defaults,macosx

                Return a JSON comprising of only the topics listed above. Required topics likes
                `variables`, etc. are not returned unless mentioned explicitely.

          %section#sections-api.doc-section
            %h2.section-title Sections Endpoint
            .section-block
              :markdown
                ### - GET /sections.json?only=\<key\>

                **INTERNAL API**

                Return a JSON comprising of specific sections only. The `key` parameter is
                calculated in a specific way:

                1. Calculate `section_id` for each section:


                        # assuming we want to target 7th section in a topic
                        section_id = "%04d" % (topic.index * 100 + 6)


                2. Join all such `section_id`s to create a string. This is the `key` parameter.

                I am open to any suggestions that eases out
                [requesting particular sections](https://github.com/nikhgupta/vimrcg/issues/1).

      .doc-sidebar.hidden-xs
        %nav#doc-nav
          %ul#doc-menu.nav.doc-menu{"data-spy" => "affix"}
            %li
              %a.scrollto{href: "#generate-api"}
                Download
            %li
              %a.scrollto{href: "#topics-api"}
                Topics
            %li
              %a.scrollto{href: "#sections-api"}
                Sections
